{
  "docs/Bank.Domain.BankAccount.html": {
    "href": "docs/Bank.Domain.BankAccount.html",
    "title": "Class BankAccount | Bank.Domain",
    "summary": "Class BankAccount Namespace Bank.Domain Assembly Bank.Domain.dll Representa una cuenta bancaria con operaciones de débito y crédito. public class BankAccount Inheritance object BankAccount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BankAccount(string, double) Inicializa una nueva instancia de BankAccount. public BankAccount(string customerName, double balance) Parameters customerName string Nombre del cliente. balance double Saldo inicial. Fields CreditAmountLessThanZeroMessage Mensaje de error cuando el monto a acreditar es menor que cero. public const string CreditAmountLessThanZeroMessage = \"Credit amount is less than zero\" Field Value string DebitAmountExceedsBalanceMessage Mensaje de error cuando el monto a debitar excede el saldo. public const string DebitAmountExceedsBalanceMessage = \"Debit amount exceeds balance\" Field Value string DebitAmountLessThanZeroMessage Mensaje de error cuando el monto a debitar es menor que cero. public const string DebitAmountLessThanZeroMessage = \"Debit amount is less than zero\" Field Value string Properties Balance Obtiene el saldo de la cuenta. public double Balance { get; } Property Value double CustomerName Obtiene el nombre del cliente. public string CustomerName { get; } Property Value string Methods Credit(double) Acredita un monto en la cuenta. public void Credit(double amount) Parameters amount double Monto a acreditar. Debit(double) Debita un monto de la cuenta. public void Debit(double amount) Parameters amount double Monto a debitar."
  },
  "docs/Bank.Domain.Tests.BankAccountTests.html": {
    "href": "docs/Bank.Domain.Tests.BankAccountTests.html",
    "title": "Class BankAccountTests | Bank.Domain",
    "summary": "Class BankAccountTests Namespace Bank.Domain.Tests Assembly Bank.Domain.Tests.dll public class BankAccountTests Inheritance object BankAccountTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Constructor_SetsCustomerNameAndBalanceCorrectly() [Test] public void Constructor_SetsCustomerNameAndBalanceCorrectly() Credit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() [Test] public void Credit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() Credit_WithValidAmount_UpdatesBalance() [Test] public void Credit_WithValidAmount_UpdatesBalance() Debit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() [Test] public void Debit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange() [Test] public void Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange() Debit_WithValidAmount_UpdatesBalance() [Test] public void Debit_WithValidAmount_UpdatesBalance()"
  },
  "docs/Bank.Domain.Tests.html": {
    "href": "docs/Bank.Domain.Tests.html",
    "title": "Namespace Bank.Domain.Tests | Bank.Domain",
    "summary": "Namespace Bank.Domain.Tests Classes BankAccountTests"
  },
  "docs/Bank.Domain.html": {
    "href": "docs/Bank.Domain.html",
    "title": "Namespace Bank.Domain | Bank.Domain",
    "summary": "Namespace Bank.Domain Classes BankAccount Representa una cuenta bancaria con operaciones de débito y crédito."
  }
}